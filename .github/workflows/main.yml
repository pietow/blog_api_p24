name: CI

on:
  push:
    branches:
      - PREP
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
      # Step 1: Check out the code
      - name: Check out code
        uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Create .env file with database settings
      - name: Create .env file with database settings
        run: |
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_NAME=testdb" >> .env
          echo "DB_USER=postgres" >> .env
          echo "DB_PASSWORD=postgres" >> .env
          echo "DB_PORT=5432" >> .env

      # Step 5: Wait for Postgres to be ready
      - name: Wait for Postgres to be ready
        run: |
          until pg_isready -h 127.0.0.1 -p 5432 -U postgres; do
            echo "Waiting for Postgres...";
            sleep 3;
          done

      # Step 6: Run migrations and tests
      - name: Run migrations and tests
        env:
          DB_HOST: 127.0.0.1
          DB_NAME: testdb
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_PORT: 5432
        run: |
          python manage.py migrate
          python manage.py test


